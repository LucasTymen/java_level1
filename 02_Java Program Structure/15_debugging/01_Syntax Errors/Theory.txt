/*
Debugging
Syntax Errors

When we are writing Java programs, the compiler is our first line of defense against errors.
It can catch syntax errors.
==> https://www.codecademy.com/resources/docs/java/compiler
==> https://www.codecademy.com/resources/docs/java/errors

Syntax errors represent grammar errors in the use of the programming language.
They are the easiest to find and correct.
The compiler will tell you where it got into trouble, and its best guess as to what you did wrong.

Some common syntax errors are:

    Misspelled variable and method names
    Omitting semicolons ;
    Omitting closing parenthesis ), square bracket ], or curly brace }

Here’s an example of a syntax error message:

Debug.java:5: error: ';' expected
  int year = 2019
                  ^
1 error

Usually the error is on the exact line indicated by the compiler, or the line just before it;
however, if the problem is incorrectly nested braces, the actual error may be at the beginning of the nested block.
Instructions
Checkpoint 1 Enabled

1.

Try compiling the code and find the syntax error in Debug.java.

Try compiling the program:

javac Debug.java

There’ll be an error message:

Debug.java:8: error: ';' expected
    System.out.println("7 8 9 10")
                                  ^
1 error

In Debug.java, on line 8, a semicolon ; is expected.
It then prints out the line of code and uses the ^ character to point to the part where the compiler got into trouble.

Fix the bug and recompile and execute:

$ javac Debug.java
$ java Debug
       1
     2 3
   4 5 6
7 8 9 10
 */
